# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/repo_policy_compliance/
tst_path = {toxinidir}/tests/
app_tst_path = {[vars]tst_path}app/
charm_tst_path = {[vars]tst_path}charm/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3.10
allowlist_externals=python
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
    flake8<6.0.0
    flake8-builtins>=2.0
    flake8-copyright>=0.2
    flake8-docstrings>=1.6
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
    ; There is an error with version 6.0.0 related to integers and arguments
    isort
    mypy
    pep8-naming
    poetry
    pydocstyle>=2.10
    pylint
    pyproject-flake8<6.0.0
    pytest
    toml
    types-PyYAML
commands =
    poetry install
    pydocstyle {[vars]src_path}
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.venv --skip {toxinidir}/.mypy_cache \
      --skip {toxinidir}/charm/lib \
      --skip {toxinidir}/icon.svg --skip {toxinidir}/poetry.lock
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
    mypy {[vars]all_path}
    pylint {[vars]all_path}

[testenv:test]
passenv = GITHUB_TOKEN, CI_GITHUB_TOKEN
description = Run tests
deps =
    coverage[toml]>=6,<7
    poetry
commands =
    poetry install
    coverage run --source={[vars]src_path} \
        -m pytest -v --tb native --ignore={[vars]charm_tst_path} -s {posargs}


[testenv:charm-integration-test]
passenv = GITHUB_TOKEN
description = Run (charm) integration tests
deps =
    juju==3.1.*
    pytest
    pytest-asyncio
    pytest-operator
commands =
    pytest -v --tb native  --ignore={[vars]app_tst_path} --log-cli-level=INFO -s {posargs}

[testenv:coverage-report]
description = Create test coverage report
deps =
    coverage[toml]>=6,<7
commands =
    coverage report

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
commands =
    bandit -c {toxinidir}/pyproject.toml -r {[vars]src_path} {[vars]tst_path}

[testenv:unit]
description = Run application unit tests
deps =
    pytest
    requests-mock
    coverage[toml]
    -r{[vars]tst_path}app/unit/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]app_tst_path}integration --ignore={[vars]charm_tst_path} -v --tb native -s {posargs}

[testenv:src-docs]
allowlist_externals=sh
description = Generate documentation for src
deps =
    lazydocs
    poetry
commands =
    ; can't run lazydocs directly due to needing to run it on src/* which produces an invocation error in tox
    poetry install
    sh generate-src-docs.sh
